buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-RC2'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.spaceshift'
version = '0.9.13'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

ext.jmeVersion = "3.2_branch-SNAPSHOT"
ext.jme3_xbuf_version = '0.9.1'
ext.lwjglVersion = "3.1.2"
ext.junitPlatformVersion = "1.0.0-M5"
ext.junitJupiterVersion = "5.0.0-M5"
ext.log4jVersion = '2.6.2'

junitPlatform {
    filters {
        engines {
        }
        tags {
        }
    }
    logManager 'org.apache.logging.log4j.jul.LogManager'
}


repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

javadoc {
    failOnError = false
}

dependencies {

    // base
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.7-M5'

    compile 'com.github.JavaSaBr:RlibFX:4.1.2'
    compile 'com.github.JavaSaBr:RLib:6.3.4'
    compile 'com.github.JavaSaBr:JME3-JFX:1.6.1'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'

    // extend image support
    // https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-batik
    compile group: 'com.twelvemonkeys.imageio', name: 'imageio-batik', version: '3.3.2'
    // https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-hdr
    compile group: 'com.twelvemonkeys.imageio', name: 'imageio-hdr', version: '3.3.2'
    // https://mvnrepository.com/artifact/com.twelvemonkeys.imageio/imageio-tiff
    compile group: 'com.twelvemonkeys.imageio', name: 'imageio-tiff', version: '3.3.2'

    // SVG support
    // https://mvnrepository.com/artifact/de.codecentric.centerdevice/javafxsvg
    compile group: 'de.codecentric.centerdevice', name: 'javafxsvg', version: '1.2.1'

    // jME
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-core:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-effects:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-bullet:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-bullet-native:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-lwjgl3:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-desktop:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-terrain:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-plugins:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-effects:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-blender:$jmeVersion"
    compile "com.github.JavaSaBr.jmonkeyengine:jme3-jogg:$jmeVersion"
    compile ("com.github.JavaSaBr.jmonkeyengine:jme3-testdata:$jmeVersion") {
        exclude group: 'lessvoid'
    }

    // LWJGL
    compile "org.lwjgl:lwjgl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-openal:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-opencl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
    compile "org.lwjgl:lwjgl-stb:${lwjglVersion}"
    runtime "org.lwjgl:lwjgl:${lwjglVersion}:natives-windows"
    runtime "org.lwjgl:lwjgl:${lwjglVersion}:natives-linux"
    runtime "org.lwjgl:lwjgl:${lwjglVersion}:natives-macos"
    runtime "org.lwjgl:lwjgl-glfw:${lwjglVersion}:natives-windows"
    runtime "org.lwjgl:lwjgl-glfw:${lwjglVersion}:natives-linux"
    runtime "org.lwjgl:lwjgl-glfw:${lwjglVersion}:natives-macos"
    runtime "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:natives-windows"
    runtime "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:natives-linux"
    runtime "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:natives-macos"
    runtime "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-windows"
    runtime "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-linux"
    runtime "org.lwjgl:lwjgl-openal:${lwjglVersion}:natives-macos"
    runtime "org.lwjgl:lwjgl-opengl:${lwjglVersion}:natives-windows"
    runtime "org.lwjgl:lwjgl-opengl:${lwjglVersion}:natives-linux"
    runtime "org.lwjgl:lwjgl-opengl:${lwjglVersion}:natives-macos"
    runtime "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-windows"
    runtime "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-linux"
    runtime "org.lwjgl:lwjgl-stb:${lwjglVersion}:natives-macos"


    // http support
    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'

    // extensions
    compile ('com.github.JavaSaBr:jme3-spaceshift-extension:1.5.2') {
        exclude group: 'org.jmonkeyengine'
    }
    compile ('com.github.JavaSaBr:tonegodemitter:2.3.4') {
        exclude group: 'org.jmonkeyengine'
    }

    compile "org.xbuf.jme3_xbuf:jme3_xbuf_loader:${jme3_xbuf_version}"

    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.0-beta-1'

    // TESTS
    testCompile "org.junit.platform:junit-platform-commons:$junitPlatformVersion"
    testRuntime "org.junit.platform:junit-platform-engine:$junitPlatformVersion"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"

    testRuntime "org.apache.logging.log4j:log4j-core:$log4jVersion"
    testRuntime "org.apache.logging.log4j:log4j-jul:$log4jVersion"

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testCompile "org.junit.platform:junit-platform-launcher:$junitPlatformVersion"
}

task copyToLib(type: Copy) {

    doFirst {
        println("delete " + "$buildDir/dependences")
        GFileUtils.deleteDirectory(new File("$buildDir/dependences"))
    }

    into "$buildDir/dependences"
    from configurations.runtime
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

defaultTasks 'clean', 'install'

// To specify a license in the pom:
install {
    repositories.mavenInstaller {
        pom.version = version
        pom.artifactId = 'jme3-spaceshift-editor'
        pom.project {
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}